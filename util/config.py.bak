import sys , os
sys.path.append('/home/monte.flora/NEWSeProbs/misc_python_scripts')
from basic_functions import load_date_list, get_newse_datetimes
import netCDF4
from hdf5_files import load_hdf5_files

#############################
# NEWS-E VERIFICATION CONFIG

# File Paths 
forecast_prob_dir = '/home/monte.flora/NEWSeProbs/generate_probability_files/forecasts'
obs_rot_track_dir = '/home/monte.flora/NEWSeProbs/observed_rotation_tracks/observed'
verification_dir  = '/home/monte.flora/NEWSeProbs/results_verification/'

# Global Parameters for the NEWS-e verification project 
n_ens_mem    = 18
n_time_idx_for_hr = 12
min_prob_area = 5. * 9  # 10 pixels

fcst_time_idx_set = [ 0, 6, 12, 18 ]

variable_attrs = {'low-level': { 'var_mrms': 'LOW_CRESSMAN' , 'var_newse' : 'uh_0to2', 'mrms_bdry' : 0.0038, 'newse_bdry' : 14. } ,
         'mid-level': { 'var_mrms': 'MID_CRESSMAN' , 'var_newse' : 'uh_2to5', 'mrms_bdry' : 0.0041, 'newse_bdry' : 65. } ,
         'dbz'      : { 'var_mrms': 'DZ_CRESSMAN' , 'var_newse' : 'comp_dz', 'mrms_bdry' : 41.121, 'newse_bdry' : 45. } }

qc_params_obs   = { 'min_area': 5*9., 'merge_thresh': 12. , 'min_time' : 2 }
qc_params_fcst  = { 'min_area': 12.*9, 'merge_thresh': 12., 'min_time' : 2 }

watershed_params_obs = {'min_thresh': 8, 'max_thresh': 60, 'data_increment': 20, 'delta': 10, 'size_threshold_pixels': 15 }
watershed_params_fcst = {'min_thresh': 2, 'max_thresh': 50, 'data_increment': 30, 'delta': 30, 'size_threshold_pixels': 30 }

observation_times = ['1800', '1830', '1900', '1930', '2000', '2030', '2100', '2130', '2200', '2230', '2300', '2330', '0000', '0030', '0100', '0130',
                    '0200', '0230', '0300', '0330', '0400', '0430', '0500', '0530', '0600']

#forecast_dates     = load_date_list( )
hdf5_filename = '/home/monte.flora/NEWSeProbs/misc_python_scripts/newse_code/randomly_shuffled_forecast_dates.hdf5'
forecast_dates     = load_hdf5_files( hdf5_filename, ['Shuffled Forecast Dates'] )[0]
verification_times =  [ '1900', '2000', '2100', '2200', '2300', '0000', '0100', '0200', '0300' ]
def datetime_dict_verify( list_of_dates, list_of_times ):
    datetimes = { }
    for date in list(list_of_dates):
        datetimes[date] = list_of_times
        return datetimes

verification_datetimes = datetime_dict_verify( forecast_dates, verification_times )

f_ens          = netCDF4.Dataset( '/oldscratch/skinnerp/2018_newse_post/summary_files/20170501/0000/news-e_ENS_00_20170502_0000_0000.nc', 'r' ) 
f_env          = netCDF4.Dataset( '/oldscratch/skinnerp/2018_newse_post/summary_files/20170501/0000/news-e_ENV_00_20170502_0000_0000.nc', 'r') 
newse_tag      = {'ENS': f_ens.variables.keys( ) , 'ENV' : f_env.variables.keys( )} 

############################
# MACHINE LEARNING CONFIG 

base_dir_ml          = '/work1/mflora/data_for_machine_learning' 
object_storage_dir_ml= os.path.join( base_dir_ml , 'storm_object_storage' )
model_saves_dir_dl   = os.path.join( base_dir_ml , 'deep_learning_model_save_files' ) 
fcst_dir_dl          = os.path.join( base_dir_ml , 'deep_learning_prob_forecasts' )
input_data_dir_dl    = os.path.join( base_dir_ml , 'deep_learning_model_input' )
results_dir_dl       = os.path.join( base_dir_ml , 'deep_learning_results' ) 

model_saves_dir_object_based   = os.path.join( base_dir_ml , 'object_based_model_save_files' )
fcst_dir_object_based          = os.path.join( base_dir_ml , 'object_based_prob_forecasts' )
input_data_dir_object_based    = os.path.join( base_dir_ml , 'object_based_model_input' )
results_dir_object_based       = os.path.join( base_dir_ml , 'object_based_results' )

matching_dist     = (40./ 3.)
dist_from_edge    = 6

num_dates = len(forecast_dates)
Ntraining = int( 0.6 * num_dates) # 60% of dates
Nvalid    = int( 0.2 * num_dates) # 20% of dates 
Ntest     = int( 0.2 * num_dates) # 20% of dates
Nfolds    = num_dates
fold_interval = 13 

instance     = get_newse_datetimes(option='mach_learn')
datetimes_ml = instance.datetime_dict( forecast_dates )

dl_env_var_set    = [ 'cape_ml', 'cin_ml' , 'lcl_ml', 'srh_0to3', 'th_e_ml', 'u_10', 'v_10', 't_2', 'td_2' ]
dl_strm_var_set   = [ 'wz_0to2', 'uh_2to5', 'comp_dz', 'uh_0to2' ]

qc_params_ml      = { 'min_area': 12*9., 'merge_thresh': 6. }


